@using GameIndastry_v2.Helpers
@inject IRepository repository

<EditForm Model="Game" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText class="form-control" @bind-Value="Game.Name" />
            <ValidationMessage For="(()=>Game.Name)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Gameplay Video:</label>
        <div>
            <InputText class="form-control" @bind-Value="Game.GamePlayVideo" />
            <ValidationMessage For="(()=>Game.GamePlayVideo)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Release date:</label>
        <div>
            <InputDate class="form-control" @bind-Value="Game.ReleaseDate" />
            <ValidationMessage For="(()=>Game.ReleaseDate)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <InputImage Label="Image" OnImageSelected="ImageSelectedHandler" ImageUrl="@imageUrl" />
    </div>
    <div class="form-check">
        <InputCheckbox @bind-Value="Game.InSale" class="form-check-input" id="gridCheck1" />
        <label class="form-check-label" for="gridCheck1">In Sale?</label>
    </div>
    <div class="form-group form-markdown">
        <MarkdownInput @bind-Value="Game.Description" Label="Description" 
                       OnFor="(()=>Game.Description)" />
    </div>
    <div class="form-group">
        <label>Game Genres</label>
        <MultipleSelector OnSelected="Selected" OnNotSelected="NotSelected" />
    </div>
    <div class="form-group">
        <label>Developers:</label>
        <MultipleSelectorTypeahead Context="GameDeveloper" OnSearch="SearchHandler" OnSelectedElements="SelectedDevelopers">
            <ResultTemplate>
                <img style="width:50px;" src="@GameDeveloper.Image" />
                @GameDeveloper.Name
            </ResultTemplate>
            <ListTemplate>
                @GameDeveloper.Name
            </ListTemplate>
        </MultipleSelectorTypeahead>
    </div>
    <button class="btn btn-primary" type="submit">Save</button>

</EditForm>

@code {
    [Parameter] public List<GameDeveloper> SelectedDevelopers { get; set; } = new();
    [Parameter] public GameModel Game { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Genre> SelectedGenres { get; set; } = new();
    [Parameter] public List<Genre> NotSelectedGenres { get; set; } = new();
    public List<MultipleSelectorHelperModel> Selected { get; set; }
    public List<MultipleSelectorHelperModel> NotSelected { get; set; }

    string? imageUrl;

    protected override void OnInitialized()
    {
        Selected = SelectedGenres.Select(x => new MultipleSelectorHelperModel(x.Id.ToString(),x.Name)).ToList();
        NotSelected = NotSelectedGenres.Select(x => new MultipleSelectorHelperModel(x.Id.ToString(),x.Name)).ToList();

        if(Game.ReleaseDate is null)
        {
            Game.ReleaseDate = DateTime.Now;
        }
        if (!String.IsNullOrWhiteSpace(Game.Image))
        {
            imageUrl = Game.Image;
            Game.Image = null;
        }
    }

    void ImageSelectedHandler (string imageBase64)
    {
        Game.Image = imageBase64;
        imageUrl = null;
    }
    async Task<IEnumerable<GameDeveloper>> SearchHandler(string searchText)
    {
        return repository.GetAllDevelopers();
    }
}
