@page "/games/search"
@inject IRepository repository

<div class="row">
    <div class="col">
        <h1 class="text-info">Search Game</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-6">
        <input type="text" class="form-control mb-2" placeholder="Name"
               @bind-value="gameName" @bind-value:event="oninput"
               @onkeypress="((KeyboardEventArgs args)=>GameNameKeyPressHandler(args))" />
        <select class="form-control mb-2" @bind="selectedGameGenre">
            <option value="-1">Genre</option>
            @foreach (var genre in Genres)
            {
                <option value="@genre.Id">@genre.Name</option>
            }
        </select>
        <div class="row mb-2">
            <div class="col">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="featureReleaseId" @bind="futureRelease" />
                    <label class="custom-control-label" for="featureReleaseId"> Feature Release?</label>
                </div>
            </div>
            <div class="col">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="canBuyId" @bind="canBuy" />
                    <label class="custom-control-label" for="canBuyId"> Can buy the Game?</label>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-outline-primary form-control mb-2" @onclick="SearchTheGame">Search</button>
        <button type="button" class="btn btn-outline-danger form-control mb-2" @onclick="ResetValues">Reset</button>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="border border-primary rounded p-4">
            <p>Game Name: @gameName</p>
            @if (selectedGameGenre == "-1")
            {
                <p>Game Genre: No Genre</p>
            }
            else
            {
                <p>Game Genre ID: @selectedGameGenre</p>
            }
            <p>Feature Release?: @futureRelease</p>
            <p>Can buy?: @canBuy</p>
        </div>
    </div>
</div>
<div class="border border-success rounded p-3 mb-3 mx-1 mt-1">
    <GameList ListOfGames="Games" />
</div>

@code {
    string gameName = "";
    string selectedGameGenre = "-1";
    List<Genre> Genres = new();
    List<GameModel> Games = new();
    bool futureRelease = false;
    bool canBuy = false;

    protected override void OnInitialized()
    {
        Genres = repository.GetAllGenres();
    }

    void GameNameKeyPressHandler(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            //TODO: Search
        }
    }
    void SearchTheGame()
    {
        Games = repository.GetAllGames();
        if (!String.IsNullOrWhiteSpace(gameName))
            Games = Games.Where(x => x.Name.ToLower().Contains(gameName.ToLower())).ToList();
        //if (selectedGameGenre != "-1")
        //    Games = Games.Where(x => x.GenreId.ToString().Equals(selectedGameGenre)).ToList();
        if (futureRelease)
            Games = Games.Where(x => x.ReleaseDate > DateTime.Now).ToList();
        if (canBuy)
            Games = Games.Where(x => x.ReleaseDate < DateTime.Now).ToList();
    }
    void ResetValues()
    {
        gameName = "";
        selectedGameGenre = "-1";
        futureRelease = false;
        canBuy = false;
        Games = new();
    }
}
